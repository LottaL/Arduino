#include <Servo.h>


//TEST BUTTONS//------------------------------
int STOP = 0;

//BOTTI//--------------------------------------
int maxdistance = 109; //115

//SERVOT//------------------------------------
int pos = 0;

Servo servo_9;
Servo servo_10;

//ULTRAÄÄNI//---------------------------------
//define pins
const int trigPin = 8;
const int echoPin = 7;
// defines variables
long duration;
int distance;

int inches = 0;
int cm = 0;

long readUltrasonicDistance()
{
  // Clears the trigPin
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  // Reads the echoPin, returns the sound wave travel time in microseconds
  duration = pulseIn(echoPin, HIGH);
  // Calculating the distance
  distance= duration*0.034/2;
  // Prints the distance on the Serial Monitor
  Serial.print("Distance: ");
  Serial.println(distance);
  return distance;
}

void setup()
{
  //SERVOT//--------------------------------------------
  servo_9.attach(9);
  servo_10.attach(10);
  
  //ULTRAÄÄNI//------------------------------------------
  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
  Serial.begin(9600);
  
  //NAPPI//--------------------------------------------
  pinMode(6, INPUT);
  

}

void loop()
{
  STOP = digitalRead(6);
  Serial.print("button state ");
  Serial.println(STOP);

  //ULTRAÄÄNI//--------------------------------------------
  // measure the ping time in cm
  cm = readUltrasonicDistance();
  // convert to inches by dividing by 2.54
  inches = (cm / 2.54);
  Serial.print(inches);
  Serial.print("in, ");
  Serial.print(cm);
  Serial.println("cm");
  delay(100); // Wait for 100 millisecond(s)
  
  //SERVOT//------------------------------------------------
  if (cm > maxdistance) {//(STOP == 0) {//  
    Serial.println("moving");
  	// sweep the servo from 0 to 180 degrees in steps
  	// of 1 degrees
  	for (pos = 0; pos <= 90; pos += 1) {
    // tell servo to go to position in variable 'pos'
    	servo_9.write(pos);
    //servo_10.write(pos);
    // wait 15 ms for servo to reach the position
    	delay(15); // Wait for 15 millisecond(s)
  	}
  	for (pos = 0; pos <= 90; pos += 1) {
    // tell servo to go to position in variable 'pos'
    //servo_9.write(pos);
    	servo_10.write(pos);
    // wait 15 ms for servo to reach the position
    	delay(15); // Wait for 15 millisecond(s)
  	}
  	for (pos = 90; pos >= 0; pos -= 1) {
    // tell servo to go to position in variable 'pos'
    	servo_9.write(pos);
    //servo_10.write(pos);
    // wait 15 ms for servo to reach the position
    	delay(15); // Wait for 15 millisecond(s)
  	}
  	for (pos = 90; pos >= 0; pos -= 1) {
    // tell servo to go to position in variable 'pos'
    //servo_9.write(pos);
    	servo_10.write(pos);
    // wait 15 ms for servo to reach the position
    	delay(15); // Wait for 15 millisecond(s)
  	}
  } else if (cm < maxdistance) {//(STOP != 0) {//
    Serial.println("stop");
    for (pos = 90; pos >= 0; pos -= 1) {
    // tell servo to go to position in variable 'pos'
    //servo_9.write(pos);
    	servo_10.write(pos);
    // wait 15 ms for servo to reach the position
    	delay(15); // Wait for 15 millisecond(s)
  	}
    for (pos = 90; pos >= 0; pos -= 1) {
    // tell servo to go to position in variable 'pos'
    	servo_9.write(pos);
    //servo_10.write(pos);
    // wait 15 ms for servo to reach the position
    	delay(15); // Wait for 15 millisecond(s)
  	}
    for (pos = 0; pos <= 90; pos += 1) {
    // tell servo to go to position in variable 'pos'
    //servo_9.write(pos);
    	servo_10.write(pos);
    // wait 15 ms for servo to reach the position
    	delay(15); // Wait for 15 millisecond(s)
  	}
    for (pos = 0; pos <= 90; pos += 1) {
    // tell servo to go to position in variable 'pos'
    	servo_9.write(pos);
    //servo_10.write(pos);
    // wait 15 ms for servo to reach the position
    	delay(15); // Wait for 15 millisecond(s)
    } 
  } 
}
